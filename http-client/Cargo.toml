[package]
name = "qiniu-http-client"
version = "0.2.3"
authors = [
    "Rong Zhou <zhourong@qiniu.com>",
    "Shanghai Qiniu Information Technologies Co., Ltd.",
]
edition = "2021"
rust-version = "1.70.0"
readme = "README.md"
license = "MIT"
repository = "https://github.com/qiniu/rust-sdk.git"
homepage = "https://www.qiniu.com"
description = "Qiniu HTTP Client for Rust"
keywords = ["qiniu", "storage"]

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
thiserror = "1.0.20"
dashmap = "5.1.0"
serde = { version = "1.0.117", features = ["derive", "rc"] }
serde_json = "1.0.59"
dirs = "3.0.1"
dns-lookup = "1.0.4"
mime = "0.3.16"
log = "0.4.11"
rand = "0.7.3"
form_urlencoded = "1.0.1"
url = "2.2.2"
ipnet = "2.3.1"
anyhow = "1.0.41"
fs4 = "0.6.1"
assert-impl = "0.1.3"
crossbeam-channel = "0.5.1"
crossbeam-queue = "0.3.2"
percent-encoding = "2.1.0"
regex = "1.5.4"
typenum = "1.15.0"
mime_guess = "2.0.3"
cfg-if = "1.0.0"
once_cell = "1.8.0"
tap = "1.0.1"
smallvec = "1.7.0"
md-5 = "0.9.1"
hex = "0.4.3"
chrono = "0.4.19"
maybe-owned = "0.3.4"
dyn-clonable = "0.9.0"
auto_impl = "1.0.0"
num-rational = { version = "0.3.0", default-features = false }
c-ares = { version = "7.2.0", optional = true }
c-ares-resolver = { version = "7.1.3", optional = true }
futures = { version = "0.3.5", optional = true }
futures-timer = { version = "3.0.2", optional = true }
async-std = { version = "1.12.0", optional = true }
trust-dns-resolver = { version = "0.21.2", optional = true }
async-std-resolver = { version = "0.21.2", optional = true }
async-once-cell = { version = "0.3.0", optional = true }

qiniu-http = { version = "0.2.3", path = "../http" }
qiniu-credential = { version = "0.2.3", path = "../credential" }
qiniu-upload-token = { version = "0.2.3", path = "../upload-token" }
qiniu-reqwest = { version = "0.2.3", path = "../http-reqwest", optional = true }
qiniu-isahc = { version = "0.2.3", path = "../http-isahc", optional = true }
qiniu-ureq = { version = "0.2.3", path = "../http-ureq", optional = true }
qiniu-utils = { version = "0.2.3", path = "../utils" }

[dev-dependencies]
async-std = { version = "1.9.0", features = ["attributes"] }
tokio = { version = "1", features = ["full"] }
tempfile = "3.1.0"
warp = "0.3.1"
futures = "0.3.5"
env_logger = "0.9.0"
once_cell = "1.8.0"

[features]
default = ["ureq"]
c_ares = ["c-ares", "c-ares-resolver"]
trust_dns = [
    "trust-dns-resolver",
    "async-std-resolver",
    "qiniu-reqwest?/trust-dns",
]

dns-over-https = ["trust_dns", "trust-dns-resolver/dns-over-https"]
dns-over-https-rustls = [
    "trust_dns",
    "trust-dns-resolver/dns-over-https-rustls",
]
dns-over-tls = ["trust_dns", "trust-dns-resolver/dns-over-tls"]
dns-over-rustls = ["trust_dns", "trust-dns-resolver/dns-over-rustls"]
dns-over-native-tls = ["trust_dns", "trust-dns-resolver/dns-over-native-tls"]
dnssec-openssl = ["trust_dns", "trust-dns-resolver/dnssec-openssl"]
dnssec-ring = ["trust_dns", "trust-dns-resolver/dnssec-ring"]
dnssec = ["trust_dns", "trust-dns-resolver/dnssec"]

reqwest = ["qiniu-reqwest"]
isahc = ["qiniu-isahc"]
ureq = ["qiniu-ureq"]
async = [
    "async-std",
    "futures",
    "fs4/std-async",
    "async-once-cell",
    "futures-timer",
    "qiniu-http/async",
    "qiniu-credential/async",
    "qiniu-upload-token/async",
    "qiniu-reqwest?/async",
    "qiniu-isahc?/async",
    "qiniu-ureq?/async",
]
tokio1 = ["async", "async-std/tokio1"]
tokio02 = ["async", "async-std/tokio02"]
tokio03 = ["async", "async-std/tokio03"]
http2 = ["qiniu-isahc?/http2"]
psl = ["qiniu-isahc?/psl"]
spnego = ["qiniu-isahc?/spnego"]
static-curl = ["qiniu-isahc?/static-curl"]
static-ssl = ["qiniu-isahc?/static-ssl"]
text-decoding = ["qiniu-isahc?/text-decoding"]
native-tls = ["qiniu-reqwest?/native-tls"]
default-tls = ["qiniu-reqwest?/default-tls"]
rustls-tls = ["qiniu-reqwest?/rustls-tls"]
native-certs = ["qiniu-ureq?/native-certs"]
tls = ["qiniu-ureq?/tls", "native-tls"]
gzip = ["qiniu-ureq?/gzip", "qiniu-reqwest?/gzip"]
cookies = ["qiniu-ureq?/cookies"]
socks-proxy = ["qiniu-ureq?/socks-proxy"]
brotli = ["qiniu-reqwest?/brotli"]
deflate = ["qiniu-reqwest?/deflate"]
docs = []

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "feature=\"docs\""]
